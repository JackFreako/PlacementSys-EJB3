/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.placement.client;

import com.placement.business.PlacementBLRemote;
import com.placement.business.StudentBLRemote;
import com.placement.business.StudentPlacementBLRemote;
import com.placement.entity.Placement;
import com.placement.entity.Student;
import com.placement.utility.EJBWrapperFactory;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kemele
 */
public class MakePlacementDialog extends javax.swing.JDialog {

    List<Student> students = null;
    Placement placement = null;
    Student selectedStudent = null;
    boolean saved = true;
    boolean status = false;
    StudentPlacementBLRemote studentPlacementBL = null;

    /**
     * Creates new form MakePlacementDialog
     */
    public MakePlacementDialog(java.awt.Frame parent, boolean modal, Placement selectedPlc) {
        super(parent, modal);
        initComponents();
        placementStudentsTable.setColumnSelectionAllowed(false);
        placementStudentsTable.setCellSelectionEnabled(false);
        placementStudentsTable.setRowSelectionAllowed(true);
        placement = selectedPlc;
        this.setTitle(placement.getName() + ": Making placement process");
        saveBtn.setEnabled(false);
        students = new ArrayList<>();
        fillData();
    }

    private void fillData() {
        try {
            studentPlacementBL = new EJBWrapperFactory().getStudentPlacementBL();
            students = studentPlacementBL.getStudents(placement.getId());
            Vector all = prepareDataVector();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public Vector prepareDataVector() {
        Vector all = new Vector();
        DefaultTableModel model = (DefaultTableModel) placementStudentsTable.getModel();
        model.setDataVector(new String[][]{}, new String[]{"ID Num", "Name", "Gender",
            "Disability", "Region", "CGPA", "Department", "Placement Reason"});
        for (Student u : students) {
            Vector v = new Vector();
            v.add(u.getIdNumber());
            v.add(u.getFullName());
            v.add(u.getGender());
            v.add(u.getDisability());
            v.add(u.getRegion());
            v.add(u.getCgpa());
            v.add(u.getDepartmentId() == null ? "" : u.getDepartmentId().getCode());
            v.add(u.getPlacementReason());
            model.addRow(v);
            all.add(v);
        }
        selectedStudent = null;
        return all;
    }

    private void handleRowSelection() {
        int id = placementStudentsTable.getSelectedRow();
        if (id > -1 && students != null && students.size() > 0) {
            selectedStudent = students.get(id);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        removeBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        startBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        unplaceBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        placementStudentsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Make placement");

        title.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        title.setText("Make Placement");

        jPanel1.setBackground(java.awt.SystemColor.activeCaptionBorder);
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        removeBtn.setText("Remove");

        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        startBtn.setText("Start");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        unplaceBtn.setText("Unplace All");
        unplaceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unplaceBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(unplaceBtn)
                .addGap(18, 18, 18)
                .addComponent(removeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeBtn)
                    .addComponent(refreshBtn)
                    .addComponent(startBtn)
                    .addComponent(saveBtn)
                    .addComponent(unplaceBtn))
                .addContainerGap())
        );

        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        placementStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Num", "Name", "Gender", "Disability", "Region", "CGPA", "Department", "Reason"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        placementStudentsTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(placementStudentsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(426, 426, 426)
                .addComponent(title)
                .addContainerGap(657, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeBtn))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        studentPlacementBL = new EJBWrapperFactory().getStudentPlacementBL();
        students = studentPlacementBL.placeOncePreview(placement.getId());
        prepareDataVector();
        saveBtn.setEnabled(true);  
        startBtn.setEnabled(false);
        saved = false;
        status = true;
    }//GEN-LAST:event_startBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        studentPlacementBL = new EJBWrapperFactory().getStudentPlacementBL();
        students = studentPlacementBL.placeOnceSave();
        prepareDataVector();
        saveBtn.setEnabled(false);
        startBtn.setEnabled(true);
        saved = true;
        status = false;
    }//GEN-LAST:event_saveBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        if (status && !saved) {
            int selc = JOptionPane.showOptionDialog(this, "The placement is not saved! Are you sure u want to exit without saving the result?", "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null, null, null);
            if (selc == JOptionPane.YES_OPTION) {
                this.dispose();
            }
        } else {
            this.dispose();
        }
    }//GEN-LAST:event_closeBtnActionPerformed

    private void unplaceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unplaceBtnActionPerformed

        int selc = JOptionPane.showOptionDialog(this, "Are you sure you want to restart placment?", "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null, null, null);
        if (selc == JOptionPane.YES_OPTION) {
            studentPlacementBL = new EJBWrapperFactory().getStudentPlacementBL();
            students = studentPlacementBL.unplaceAll();
            prepareDataVector();
            saveBtn.setEnabled(false);
            startBtn.setEnabled(true);
            status = false;
            saved = true;
        }

    }//GEN-LAST:event_unplaceBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        if (students != null) {
            prepareDataVector();
        }
    }//GEN-LAST:event_refreshBtnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable placementStudentsTable;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton removeBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton startBtn;
    private javax.swing.JLabel title;
    private javax.swing.JButton unplaceBtn;
    // End of variables declaration//GEN-END:variables
}
